1. Initialize adjacency list `g`
2. Create arrays:
   - `disc[]` → Discovery time
   - `low[]` → Lowest reachable node
   - `parent[]` → Parent of each node
   - `visited[]` → Track visited nodes
   - `ap[]` → Track articulation points
3. Set `time = 0`
4. For each unvisited node:
   - Run DFS:
     a) Set `disc[node] = low[node] = ++time`
     b) For each neighbor:
        i) If unvisited, set parent and recurse DFS
        ii) Update `low[node]` based on `low[neighbor]`
        iii) If root has multiple children, it's an articulation point
        iv) If a non-root has `low[neighbor] >= disc[node]`, it's an articulation point
        v) If neighbor is visited (not parent), update `low[]`
5. Print all articulation points in `ap[]`
